name: Release - Docker

# This workflow listens to pubished releases.
# It includes releases and pre-releases.
# It fetches the binaries, builds an injected docker
# image and publishes it.

on:
  release:
    types:
      - published

jobs:
  docker_build_publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.release.tag_name }}

      - name: Fetch files from release
        run: |
          echo Repo: ${{ github.event.repository.full_name }}

          echo Name: ${{ github.event.release.name }}
          echo Tag: ${{ github.event.release.tag_name }}
          echo Draft: ${{ github.event.release.draft }}
          echo Prerelease: ${{ github.event.release.prerelease }}
          echo Assets: ${{ github.event.release.assets }}

          for f in polkadot-collator polkadot-collator.asc polkadot-collator.sha256; do
            URL="https://github.com/${{ github.event.repository.full_name }}/releases/download/${{ github.event.release.tag_name }}/$f"
            echo " - Fetching $f from $URL"
            wget $URL -O $f
          done
          chmod a+x polkadot-collator
          ls -al

      - name: Check files
        run: |
          echo TODO
          ls -al *collator*
          shasum -a 256 -c polkadot-collator.sha256
          sha_result=$?

          # Parity Security
          gpg --receive-keys 9D4B2B6EB8F97156D19669A9FF0812D491B96798

          # Chevdor
          gpg --receive-keys 2835EAF92072BC01D188AF2C4A092B93E97CE1E2

          gpg --verify polkadot-collator.asc
          gpg_result=$?

          echo sha_result: $sha_result
          echo gpg_result: $gpg_result

          if [[ $sha_result -ne 0 || $gpg_result -ne 0 ]]; then
            echo "Check failed, exiting with error"
            exit 1
          else
            echo "Checks passed"
          fi

      - name: Build injected image
        run: |
          mkdir -p target/release
          cp -f polkadot-collator* target/release/
          ./docker/scripts/build-injected-image.sh

      - name: Tag and Publish
        env:
          IMAGE: polkadot-collator
        run: |
          OWNER=$(echo ${GITHUB_REPOSITORY} | cut  -f1 -d/)
          TARGET_REPO=$OWNER
          if [[ $OWNER =~ ^parity.*$ ]]; then
            TARGET_REPO="parity"
          fi

          docker run --rm -it $TARGET_REPO/$IMAGE --version
          VERSION=$(docker run --rm -it $TARGET_REPO/$IMAGE --version | awk '{ print $2 }' )
          PARTS=($(echo $VERSION | tr "-" "\n"))
          SEMVER=$PARTS[1]
          GITREF=$PARTS[2]
          PRE=${{ github.event.release.prerelease }}
          PRE_STR=""

          echo "SEMVER=$SEMVER"
          echo "GITREF=$GITREF"
          echo "PRE=$PRE"
          echo "PRE_STR=$PRE_STR"

          # Build a tag such as:
          # 1.2.3-8a1201273 or
          # 1.2.3-pre-8a1201273 for pre-releases
          [[ $PRE == "true" ]] && PRE_STR="-pre"
          TAG=${SEMVER}${PRE_STR}-${GITREF}

          docker tag $TARGET_REPO/$IMAGE $TARGET_REPO/$IMAGE:$TAG
          echo docker push $TARGET_REPO/$IMAGE:$TAG
          if [[ $PRE != "true" ]]; then
            docker tag $TARGET_REPO/$IMAGE $TARGET_REPO/$IMAGE:latest
            echo docker push $TARGET_REPO/$IMAGE:latest
          fi

          docker images | grep $TARGET_REPO/$IMAGE
