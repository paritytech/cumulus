// Copyright Parity Technologies (UK) Ltd.
// This file is part of Cumulus.

// Cumulus is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// Cumulus is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with Cumulus.  If not, see <http://www.gnu.org/licenses/>.

//! Autogenerated weights for `snowbridge_ethereum_beacon_client`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-03-28, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `ip-172-31-4-183`, CPU: `Intel(R) Xeon(R) Platinum 8259CL CPU @ 2.50GHz`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("bridge-hub-rococo-dev"), DB CACHE: 1024

// Executed Command:
// ./artifacts/polkadot-parachain
// benchmark
// pallet
// --chain=bridge-hub-rococo-dev
// --execution=wasm
// --wasm-execution=compiled
// --pallet=snowbridge_ethereum_beacon_client
// --extrinsic=*
// --steps=50
// --repeat=20
// --json
// --header=./file_header.txt
// --output=./parachains/runtimes/bridge-hubs/bridge-hub-rococo/src/weights/snowbridge_ethereum_beacon_client.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `snowbridge_ethereum_beacon_client`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> snowbridge_ethereum_beacon_client::WeightInfo for WeightInfo<T> {
	/// Storage: EthereumBeaconClient Blocked (r:1 w:0)
	/// Proof: EthereumBeaconClient Blocked (max_values: Some(1), max_size: Some(1), added: 496, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient LatestSyncCommitteePeriod (r:1 w:1)
	/// Proof: EthereumBeaconClient LatestSyncCommitteePeriod (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient SyncCommittees (r:2 w:1)
	/// Proof: EthereumBeaconClient SyncCommittees (max_values: None, max_size: Some(1593), added: 4068, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient ValidatorsRoot (r:1 w:0)
	/// Proof: EthereumBeaconClient ValidatorsRoot (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient FinalizedBeaconHeaderSlots (r:1 w:1)
	/// Proof: EthereumBeaconClient FinalizedBeaconHeaderSlots (max_values: Some(1), max_size: Some(8002), added: 8497, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient LatestFinalizedHeaderState (r:1 w:1)
	/// Proof: EthereumBeaconClient LatestFinalizedHeaderState (max_values: Some(1), max_size: Some(48), added: 543, mode: MaxEncodedLen)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient FinalizedBeaconHeaders (r:0 w:1)
	/// Proof: EthereumBeaconClient FinalizedBeaconHeaders (max_values: None, max_size: Some(144), added: 2619, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient FinalizedBeaconHeadersBlockRoot (r:0 w:1)
	/// Proof: EthereumBeaconClient FinalizedBeaconHeadersBlockRoot (max_values: None, max_size: Some(64), added: 2539, mode: MaxEncodedLen)
	fn sync_committee_period_update() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1921`
		//  Estimated: `26135`
		// Minimum execution time: 47_657_897_000 picoseconds.
		Weight::from_parts(47_722_703_000, 0)
			.saturating_add(Weight::from_parts(0, 26135))
			.saturating_add(T::DbWeight::get().reads(8))
			.saturating_add(T::DbWeight::get().writes(6))
	}
	/// Storage: EthereumBeaconClient Blocked (r:1 w:0)
	/// Proof: EthereumBeaconClient Blocked (max_values: Some(1), max_size: Some(1), added: 496, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient LatestFinalizedHeaderState (r:1 w:1)
	/// Proof: EthereumBeaconClient LatestFinalizedHeaderState (max_values: Some(1), max_size: Some(48), added: 543, mode: MaxEncodedLen)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient SyncCommittees (r:1 w:0)
	/// Proof: EthereumBeaconClient SyncCommittees (max_values: None, max_size: Some(1593), added: 4068, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient ValidatorsRoot (r:1 w:0)
	/// Proof: EthereumBeaconClient ValidatorsRoot (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient FinalizedBeaconHeaderSlots (r:1 w:1)
	/// Proof: EthereumBeaconClient FinalizedBeaconHeaderSlots (max_values: Some(1), max_size: Some(8002), added: 8497, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient FinalizedBeaconHeaders (r:0 w:1)
	/// Proof: EthereumBeaconClient FinalizedBeaconHeaders (max_values: None, max_size: Some(144), added: 2619, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient FinalizedBeaconHeadersBlockRoot (r:0 w:1)
	/// Proof: EthereumBeaconClient FinalizedBeaconHeadersBlockRoot (max_values: None, max_size: Some(64), added: 2539, mode: MaxEncodedLen)
	fn import_finalized_header() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1921`
		//  Estimated: `20574`
		// Minimum execution time: 47_461_268_000 picoseconds.
		Weight::from_parts(47_502_607_000, 0)
			.saturating_add(Weight::from_parts(0, 20574))
			.saturating_add(T::DbWeight::get().reads(6))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	/// Storage: EthereumBeaconClient Blocked (r:1 w:0)
	/// Proof: EthereumBeaconClient Blocked (max_values: Some(1), max_size: Some(1), added: 496, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient LatestFinalizedHeaderState (r:1 w:0)
	/// Proof: EthereumBeaconClient LatestFinalizedHeaderState (max_values: Some(1), max_size: Some(48), added: 543, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient LatestExecutionHeaderState (r:1 w:1)
	/// Proof: EthereumBeaconClient LatestExecutionHeaderState (max_values: Some(1), max_size: Some(80), added: 575, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient FinalizedBeaconHeadersBlockRoot (r:1 w:0)
	/// Proof: EthereumBeaconClient FinalizedBeaconHeadersBlockRoot (max_values: None, max_size: Some(64), added: 2539, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient SyncCommittees (r:1 w:0)
	/// Proof: EthereumBeaconClient SyncCommittees (max_values: None, max_size: Some(1593), added: 4068, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient ValidatorsRoot (r:1 w:0)
	/// Proof: EthereumBeaconClient ValidatorsRoot (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: EthereumBeaconClient ExecutionHeaders (r:0 w:1)
	/// Proof: EthereumBeaconClient ExecutionHeaders (max_values: None, max_size: Some(188), added: 2663, mode: MaxEncodedLen)
	fn import_execution_header() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1965`
		//  Estimated: `14688`
		// Minimum execution time: 47_535_909_000 picoseconds.
		Weight::from_parts(47_607_054_000, 0)
			.saturating_add(Weight::from_parts(0, 14688))
			.saturating_add(T::DbWeight::get().reads(6))
			.saturating_add(T::DbWeight::get().writes(2))
	}
}
