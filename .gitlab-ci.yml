# .gitlab-ci.yml
#
# cumulus
#
# pipelines can be triggered manually in the web


stages:
  - test
  - build

variables:                         &default-vars
  GIT_STRATEGY:                    fetch
  GIT_DEPTH:                       3
  CARGO_INCREMENTAL:               0
  CARGO_TARGET_DIR:                "/ci-cache/${CI_PROJECT_NAME}/targets/${CI_COMMIT_REF_NAME}/${CI_JOB_NAME}"
  CI_SERVER_NAME:                  "GitLab CI"

.docker-env:                       &docker-env
  image:                           paritytech/ci-linux:production
  before_script:
    - cargo -vV
    - rustc -vV
    - rustup show
    - cargo --version
    - sccache -s
  only:
    - master
    - /^v[0-9]+\.[0-9]+.*$/        # i.e. v1.0, v2.1rc1
    - schedules
    - web
    - /^[0-9]+$/                   # PRs
  dependencies:                    []
  interruptible:                   true
  retry:
    max: 2
    when:
      - runner_system_failure
      - unknown_failure
      - api_failure
  tags:
    - linux-docker

.collect-artifacts:                &collect-artifacts
  artifacts:
    name:                          "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    when:                          on_success
    expire_in:                     28 days
    paths:
      - ./artifacts/

#### stage:                        test

test-linux-stable:
  stage:                           test
  <<:                              *docker-env
  variables:
    <<:                            *default-vars
    # Enable debug assertions since we are running optimized builds for testing
    # but still want to have debug assertions.
    RUSTFLAGS: "-Cdebug-assertions=y -Dwarnings"
  script:
    - cargo clean
    # it's almost free to produce a binary here, please refrain from using
    # it in production since it goes with the debug assertions
    - time cargo build --release --locked --bin polkadot-collator
    - time cargo test --all --release --locked
    - sccache -s
    # pack artifacts
    - mkdir -p ./artifacts
    - mv ${CARGO_TARGET_DIR}/release/polkadot-collator ./artifacts/.
